{-# LANGUAGE OverloadedStrings #-}

module Config.MetadataAuthor where

-- import qualified Data.Text as T (Text)
import Text.Pandoc (Inline(Link, Span, Space, Str))

import qualified Data.Text as T

-- config testing: all unique
authorCollapseTestCases :: [(String, [Inline])]
authorCollapseTestCases =
  [ ("a", [Space,Span ("",["author","cite-author"],[]) [Str "a"]])
  , ("a, b", [Space,Span ("",["author","cite-author-plural"],[("title","a, b")]) [Str "a",Str ", ",Str "b"]])
  , ("a, b, c", [Space,Span ("",["author","cite-author-plural"],[("title","a, b, c")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c"]])
  , ( "a, b, c, d", [Space,Span ("",["author","cite-author-plural"],[("title","a, b, c, d")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c",Str ", ",Str "d"]])
  , ("a, b, c, d, e", [Space,Span ("",["author","collapse"],[]) [Span ("",["abstract-collapse","cite-author-plural"],[("title","a, b, c, d, e")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c"],Span ("",[],[]) [Str ", ",Str "d",Str ", ",Str "e"]]])
  , ( "a, b, c, d, e, f", [Space,Span ("",["author","collapse"],[]) [Span ("",["abstract-collapse","cite-author-plural"],[("title","a, b, c, d, e, f")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c"],Span ("",[],[]) [Str ", ",Str "d",Str ", ",Str "e",Str ", ",Str "f"]]])
  , ( "a, b, c, d, e, f, g", [Space,Span ("",["author","collapse"],[]) [Span ("",["abstract-collapse","cite-author-plural"],[("title","a, b, c, d, e, f, g")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c"],Span ("",[],[]) [Str ", ",Str "d",Str ", ",Str "e",Str ", ",Str "f",Str ", ",Str "g"]]])

  -- test with link rewrites enabled:
  , ("a, b, c, d, e, f, George Washington",
     [Space,Span ("",["author","collapse"],[]) [Span ("",["abstract-collapse","cite-author-plural"],[("title","a, b, c, d, e, f, George Washington")]) [Str "a",Str ", ",Str "b",Str ", ",Str "c"],Span ("",[],[]) [Str ", ",Str "d",Str ", ",Str "e",Str ", ",Str "f",Str ", ",Link ("",[],[]) [Str "George Washington"] ("https://en.wikipedia.org/wiki/George_Washington","")]]])
    ]

-- list of rewrites for 'alternative name' → 'canonical name'
-- Config tests: unique values, no loops
canonicals :: [(String, String)]
canonicals = map (\(a,b) -> (b,a))
  -- written down in reverse order to enable lexicographic sorting by canonical name:
  [
    ("Eliezer Yudkowsky", "ESYudkowsky")
  , ("Aaron Koelker", "AaronKoelker")
  , ("Alex Albert", "alexalbert__")
  , ("Alice Maz", "alicemazzy")
  , ("Allen Tsui", "Mr_AllenT")
  , ("Alyssa M. Vance", "alyssamvance")
  , ("Amanda Askell", "amandaaskell")
  , ("Amjad Masad", "amasad")
  , ("Andrej Karpathy", "karpathy")
  , ("Andrew Curran", "AndrewCurran_")
  , ("Andrew White", "andrewwhite01")
  , ("Anita Jott", "AnitaJott")
  , ("Anthony Zhang", "AnthonyLeeZhang")
  , ("Anton Bakhtin", "anton_bakhtin")
  , ("Artem Andreenko", "miolini")
  , ("Bindu Reddy", "bindureddy")
  , ("Bojan Tunguz", "tunguz")
  , ("Brenan Keller", "brenankeller")
  , ("Brendan Bycroft", "BrendanBycroft")
  , ("Brian Roemmele", "BrianRoemmele")
  , ("Bryan Chiang", "bryanhpchiang")
  , ("Charlie B. Holtz", "charliebholtz")
  , ("Charlie Snell", "sea_snell")
  , ("Chase Lean", "chaseleantj")
  , ("Chenglei Si", "ChengleiSi")
  , ("Chris Bakke", "ChrisJBakke")
  , ("Claire Silver", "ClaireSilver12")
  , ("Daniel Colson", "DanielColson6")
  , ("David Kasten", "David_Kasten")
  , ("David S. Holz", "DavidSHolz")
  , ("Davis Blalock", "davisblalock")
  , ("Denis Shiryaev", "literallydenis")
  , ("Depths of Wikipedia", "depthsofwiki")
  , ("Dorsa Amir", "DorsaAmir")
  , ("Douglas L. Farrar", "DouglasLFarrar")
  , ("Ed Leon Klinger", "edleonklinger")
  , ("Edward Kmett", "kmett")
  , ("Eliezer Yudkowsky", "E. Yudkowsky")
  , ("Eliezer Yudkowsky", "Yudkowsky")
  , ("Elon Musk", "elonmusk")
  , ("Emad Mostaque", "EMostaque")
  , ("Emad Mostaque", "emad")
  , ("Emmett Shear", "eshear")
  , ("Eric Schmidt", "EricSchmidt")
  , ("Ethan Mollick", "emollick")
  , ("Fabian Stelzer", "fabianstelzer")
  , ("Francois Chollet", "fchollet")
  , ("Francois Fleuret", "francoisfleuret")
  , ("G. J. McGowan", "GjMcGowan")
  , ("Garry Newman", "garrynewman")
  , ("Geoffrey Irving", "geoffreyirving")
  , ("Grace Kind", "kindgracekind")
  , ("Grant Slatton", "GrantSlatton")
  , ("Greg Brockman", "gdb")
  , ("Greg Kamradt", "GregKamradt")
  , ("Hannu Rajaniemi", "hannu")
  , ("Ilya Sutskever", "ilyasut")
  , ("Jacob Janerka", "JacobJanerka")
  , ("Jake Ward", "jakezward")
  , ("James Campbell", "mezaoptimizer")
  , ("Janus", "repligate")
  , ("Javi Lopez", "javilopen")
  , ("Jay Hack", "mathemagic1an")
  , ("Jeff Dean", "JeffDean")
  , ("Jeremy P. Howard", "jeremyphoward")
  , ("Jill Hubley", "Jill_hubley")
  , ("Jim Fan", "DrJimFan")
  , ("Joel Simon", "_joelsimon")
  , ("John Allard", "john__allard")
  , ("John Carmack", "ID_AA_Carmack")
  , ("Jordan Ellenberg", "JSEllenberg")
  , ("Josh Whiton", "joshwhiton")
  , ("Joshua Batson", "thebasepoint")
  , ("Joshua Xu", "joshua_xu_")
  , ("Jukka Luoma", "voooooogel")
  , ("Julian Hazell", "mealreplacer")
  , ("Julie W. Design", "juliewdesign_")
  , ("Justine Moore", "venturetwins")
  , ("Kanishka Misra", "kanishkamisra")
  , ("Kart ographien", "kartographien")
  , ("Kendric Tonn", "kendrictonn")
  , ("Kenneth O. Stanley", "kenneth0stanley")
  , ("LMSYS Org", "lmsysorg")
  , ("Leela Chess Zero", "LeelaChessZero")
  , ("Letter Library", "Letter_Library")
  , ("Louis Knight-Webb", "LouisKnightWebb")
  , ("Malcolm Ocean", "Malcolm_Ocean")
  , ("Marc Stevens", "realhashbreaker")
  , ("Marginalia", "MarginaliaNu")
  , ("Marvin von Hagen", "marvinvonhagen")
  , ("Matt Bateman", "mbateman")
  , ("Matthew Bar", "MatthewJBar")
  , ("Mckay Wrigley", "mckaywrigley")
  , ("Michael Nielsen", "michael_nielsen")
  , ("Misha Saul", "misha_saul")
  , ("Murat Ayfer", "mayfer")
  , ("Nat Friedman", "natfriedman")
  , ("Nathalie Rach", "NathalieRach")
  , ("Nathan Culley", "nathan_culley")
  , ("Neal Agarwal", "nealagarwal")
  , ("Nemo", "thecaptain_nemo")
  , ("Nick Cammarata", "nickcammarata")
  , ("Nikita Bier", "nikitabier")
  , ("NovelAI", "novelaiofficial")
  , ("Paris Buttfield-Addison", "parisba")
  , ("Patricio Gonzalez Vivo", "patriciogv")
  , ("Patrick McKenzie", "patio11")
  , ("Paul Graham", "paulg")
  , ("Peter G. Yang", "petergyang")
  , ("Peter Welinder", "npew")
  , ("Peter Xi Chen", "peterxichen")
  , ("Phil Hawksworth", "philhawksworth")
  , ("Pietro Schirano", "skirano")
  , ("Pika", "pika_labs")
  , ("Qdrant", "qdrant_engine")
  , ("Rich Harang", "rharang")
  , ("Richard Socher", "RichardSocher")
  , ("Rick Lee James", "RickLeeJames")
  , ("Riley Goodside", "goodside")
  , ("Rita Geleta", "ritageleta")
  , ("Rob Mensching", "robmen")
  , ("Robin Saikia", "robinsaikia")
  , ("Roger K. Moore", "rogerkmoore")
  , ("Rohit Krishnan", "krishnanrohit")
  , ("Rowan Cheung", "rowancheung")
  , ("Ryan C. Briggs", "ryancbriggs")
  , ("Sam Altman", "sama")
  , ("Sam Parr", "thesamparr")
  , ("Sam Toyer", "sdtoyer")
  , ("Sarah Cone", "sarah_cone")
  , ("Shawn Presser", "shawwn")
  , ("Shawn Presser", "shawwwn")
  , ("Shawn Presser", "shawwwwn")
  , ("Shawn Wang", "swyx")
  , ("Shayne Redford", "ShayneRedford")
  , ("Sherjil Ozair", "sherjilozair")
  , ("Suhail Doshi", "Suhail")
  , ("Sully Omarr", "SullyOmarr")
  , ("Suzan Zhang", "suchenzang")
  , ("Thomas Moynihan", "nemocentric")
  , ("Tiago Forte", "fortelabs")
  , ("Tim Davison", "timd_ca")
  , ("Victor Dibia", "vykthur")
  , ("Victor Taelin", "VictorTaelin")
  , ("Will Depue", "willdepue")
  , ("William Cusick", "williamcusick")
  , ("Yann LeCun", "ylecun")
  , ("Yishan Wong", "yishan")
  , ("Zach Weingarten", "zachweingarten")
  , ("Zachary Lee", "wenquai")
  , ("Zlatý Retvítr", "retvitr")
  , ("pinkddle", "vi")
  ]

-- Config tests: unique all, no loops
authorLinkDB :: [(T.Text, T.Text)]
authorLinkDB = [("George Washington", "https://en.wikipedia.org/wiki/George_Washington")
               , ("Eliezer Yudkowsky", "https://www.yudkowsky.net/")]
